# debug_hlsfield.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø—É—Ç—è–º–∏ –≤ django-hlsfield
"""

import os
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'videotest.settings')
django.setup()

from django.core.files.storage import default_storage
from videotest.models import Video  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É –º–æ–¥–µ–ª—å
from hlsfield.tasks import _get_base_key
from hlsfield import defaults


def debug_storage_paths():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—É—Ç–µ–π storage"""
    print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê STORAGE ===")
    print(f"MEDIA_ROOT: {getattr(settings, 'MEDIA_ROOT', 'NOT SET')}")
    print(f"DEFAULT_FILE_STORAGE: {getattr(settings, 'DEFAULT_FILE_STORAGE', 'default')}")
    print(f"Storage class: {default_storage.__class__.__name__}")
    print(f"Storage location: {getattr(default_storage, 'location', 'NOT SET')}")
    print()


def debug_hlsfield_settings():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ hlsfield"""
    print("=== –ù–ê–°–¢–†–û–ô–ö–ò HLSFIELD ===")
    print(f"HLS_SUBDIR: {defaults.HLS_SUBDIR}")
    print(f"DASH_SUBDIR: {defaults.DASH_SUBDIR}")
    print(f"ADAPTIVE_SUBDIR: {defaults.ADAPTIVE_SUBDIR}")
    print(f"SIDECAR_LAYOUT: {defaults.SIDECAR_LAYOUT}")
    print()


def debug_path_generation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—É—Ç–µ–π"""
    print("=== –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–£–¢–ï–ô ===")

    # –¢–µ—Å—Ç–æ–≤—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    test_names = [
        "videos/12345678/test.mp4",
        "test.mp4",
        "videos/folder/subfolder/video.mp4"
    ]

    for name in test_names:
        print(f"–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è: {name}")
        hls_key = _get_base_key(name, defaults.HLS_SUBDIR)
        dash_key = _get_base_key(name, defaults.DASH_SUBDIR)
        adaptive_key = _get_base_key(name, defaults.ADAPTIVE_SUBDIR)

        print(f"  HLS key: {hls_key}")
        print(f"  DASH key: {dash_key}")
        print(f"  Adaptive key: {adaptive_key}")
        print()


def debug_existing_video():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ"""
    print("=== –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –í–ò–î–ï–û ===")

    try:
        videos = Video.objects.all()[:3]  # –ü–µ—Ä–≤—ã–µ 3 –≤–∏–¥–µ–æ

        if not videos:
            print("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return

        for video in videos:
            print(f"Video ID: {video.id}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ
            if hasattr(video, 'video') and video.video:
                print(f"  video.name: {video.video.name}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º storage –ø—É—Ç—å
                try:
                    storage_path = video.video.storage.path(video.video.name)
                    print(f"  storage path: {storage_path}")
                    print(f"  file exists: {os.path.exists(storage_path)}")
                except Exception as e:
                    print(f"  storage path error: {e}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
                try:
                    url = video.video.url
                    print(f"  URL: {url}")
                except Exception as e:
                    print(f"  URL error: {e}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º HLS/DASH –ø–æ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
                if hasattr(video, 'hls_master') and video.hls_master:
                    print(f"  HLS master: {video.hls_master}")

                if hasattr(video, 'dash_manifest') and video.dash_manifest:
                    print(f"  DASH manifest: {video.dash_manifest}")

            print()

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –≤–∏–¥–µ–æ: {e}")


def test_storage_save():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ storage"""
    print("=== –¢–ï–°–¢ STORAGE SAVE ===")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_content = b"test content"

    test_paths = [
        "test/simple.txt",
        "videos/12345678/adaptive/test.txt",
        "videos/folder/hls/test.txt"
    ]

    for test_path in test_paths:
        try:
            from io import BytesIO
            file_obj = BytesIO(test_content)

            saved_name = default_storage.save(test_path, file_obj)
            print(f"–¢–µ—Å—Ç –ø—É—Ç—å: {test_path}")
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: {saved_name}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
            exists = default_storage.exists(saved_name)
            print(f"–°—É—â–µ—Å—Ç–≤—É–µ—Ç: {exists}")

            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
            try:
                full_path = default_storage.path(saved_name)
                print(f"–ü–æ–ª–Ω—ã–π –ø—É—Ç—å: {full_path}")
                print(f"–†–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(full_path)}")
            except:
                print("–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å (–≤–æ–∑–º–æ–∂–Ω–æ S3)")

            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            default_storage.delete(saved_name)
            print("–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
            print()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–µ {test_path}: {e}")
            print()


if __name__ == "__main__":
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DJANGO-HLSFIELD")
    print("=" * 50)

    debug_storage_paths()
    debug_hlsfield_settings()
    debug_path_generation()
    debug_existing_video()
    test_storage_save()

    print("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
